<?xml version="1.0" encoding="utf-8"?>
<container xmlns="http://symfony.com/schema/dic/services" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://symfony.com/schema/dic/services http://symfony.com/schema/dic/services/services-1.0.xsd">
    <parameters>
        <parameter key="sulu_media.admin.class">Sulu\Bundle\MediaBundle\Admin\MediaAdmin</parameter>
        <parameter key="sulu_media.media_manager.class">Sulu\Bundle\MediaBundle\Media\Manager\MediaManager</parameter>
        <parameter key="sulu_media.collection_repository.class">Sulu\Bundle\MediaBundle\Entity\CollectionRepository</parameter>
        <parameter key="sulu_media.file_validator.class">Sulu\Bundle\MediaBundle\Media\FileValidator\FileValidator</parameter>
        <parameter key="sulu_media.format_manager.class">Sulu\Bundle\MediaBundle\Media\FormatManager\FormatManager</parameter>
        <parameter key="sulu_media.format_cache_clearer.class">Sulu\Bundle\MediaBundle\Media\FormatCache\FormatCacheClearer</parameter>
        <parameter key="sulu_media.format_cache.class">Sulu\Bundle\MediaBundle\Media\FormatCache\LocalFormatCache</parameter>
        <parameter key="sulu_media.image.converter.class">Sulu\Bundle\MediaBundle\Media\ImageConverter\ImagineImageConverter</parameter>
        <parameter key="sulu_media.image.scaler.class">Sulu\Bundle\MediaBundle\Media\ImageConverter\Scaler\Scaler</parameter>
        <parameter key="sulu_media.image.cropper.class">Sulu\Bundle\MediaBundle\Media\ImageConverter\Cropper\Cropper</parameter>
        <parameter key="sulu_media.image.transformation_pool.class">Sulu\Bundle\MediaBundle\Media\ImageConverter\TransformationPool</parameter>
        <parameter key="sulu_media.image.transformation.crop.class">Sulu\Bundle\MediaBundle\Media\ImageConverter\Transformation\CropTransformation</parameter>
        <parameter key="sulu_media.media_selection.class">Sulu\Bundle\MediaBundle\Content\Types\MediaSelectionContentType</parameter>
        <parameter key="sulu_media.collection_manager.class">Sulu\Bundle\MediaBundle\Collection\Manager\CollectionManager</parameter>
        <parameter key="sulu_media.type_manager.class">Sulu\Bundle\MediaBundle\Media\TypeManager\TypeManager</parameter>
        <parameter key="sulu_media.format_options_manager.class">Sulu\Bundle\MediaBundle\Media\FormatOptions\FormatOptionsManager</parameter>
        <parameter key="sulu_media.collection_entity">SuluMediaBundle:Collection</parameter>
        <parameter key="sulu_media.format_options_entity">SuluMediaBundle:FormatOptions</parameter>
        <parameter key="sulu_media.entity.file_version_meta">SuluMediaBundle:FileVersionMeta</parameter>
        <parameter key="sulu_media.twig_extension.disposition_type.class">Sulu\Bundle\MediaBundle\Twig\DispositionTypeTwigExtension</parameter>
        <parameter key="sulu_media.twig_extension.media.class">Sulu\Bundle\MediaBundle\Twig\MediaTwigExtension</parameter>
        <parameter key="tmp">Sulu\Bundle\MediaBundle\Twig\MediaTwigExtension</parameter>
        <parameter key="sulu_media.video_thumbnail_generator.class">Sulu\Bundle\MediaBundle\Media\Video\VideoThumbnailService</parameter>
    </parameters>

    <services>
        <service
            id="sulu_media.media_list_builder_factory"
            class="Sulu\Bundle\MediaBundle\Media\ListBuilderFactory\MediaListBuilderFactory"
        >
            <argument type="service" id="sulu_core.doctrine_rest_helper" />
            <argument type="service" id="sulu_core.doctrine_list_builder_factory" />
            <argument type="service" id="sulu_media.collection_repository" />
            <argument type="service" id="sulu_security.security_checker" />
            <argument>%sulu.model.media.class%</argument>
            <argument>%sulu.model.collection.class%</argument>

            <tag name="sulu.context" context="admin"/>
        </service>

        <service
            id="sulu_media.media_list_representation_factory"
            class="Sulu\Bundle\MediaBundle\Media\ListRepresentationFactory\MediaListRepresentationFactory"
        >
            <argument type="service" id="sulu_media.media_manager" />
            <argument type="service" id="sulu_media.format_manager" />

            <tag name="sulu.context" context="admin"/>
        </service>

        <service
            id="sulu_media.media_controller"
            class="Sulu\Bundle\MediaBundle\Controller\MediaController"
            public="true"
        >
            <argument type="service" id="fos_rest.view_handler" />
            <argument type="service" id="security.token_storage" on-invalid="null" />
            <argument type="service" id="sulu_media.media_manager" />
            <argument type="service" id="sulu_media.format_manager" />
            <argument type="service" id="sulu_core.doctrine_rest_helper" />
            <argument type="service" id="sulu_core.doctrine_list_builder_factory" />
            <argument type="service" id="doctrine.orm.entity_manager" />
            <argument type="service" id="sulu_media.storage" />
            <argument type="service" id="sulu_media.collection_repository" />
            <argument type="service" id="sulu_security.security_checker" />
            <argument type="service" id="sulu_core.list_builder.field_descriptor_factory" />
            <argument>%sulu.model.media.class%</argument>
            <argument>%sulu.model.collection.class%</argument>
            <argument type="service" id="sulu_media.media_list_builder_factory" />
            <argument type="service" id="sulu_media.media_list_representation_factory" />

            <tag name="sulu.context" context="admin"/>
        </service>

        <service
            id="sulu_media.media_preview_controller"
            class="Sulu\Bundle\MediaBundle\Controller\MediaPreviewController"
            public="true"
        >
            <argument type="service" id="fos_rest.view_handler" />
            <argument type="service" id="security.token_storage" on-invalid="null" />
            <argument type="service" id="sulu_media.media_manager" />
            <argument type="service" id="sulu_media.system_collections.manager" />
            <argument type="service" id="doctrine.orm.entity_manager" />
            <argument type="service" id="sulu_activity.domain_event_collector" />

            <tag name="sulu.context" context="admin"/>
        </service>

        <service
            id="sulu_media.media_format_controller"
            class="Sulu\Bundle\MediaBundle\Controller\MediaFormatController"
            public="true"
        >
            <argument type="service" id="fos_rest.view_handler" />
            <argument type="service" id="sulu_media.format_options_manager" />
            <argument type="service" id="doctrine.orm.entity_manager" />

            <tag name="sulu.context" context="admin"/>
        </service>

        <service
            id="sulu_media.media_redirect_controller"
            class="Sulu\Bundle\MediaBundle\Controller\MediaRedirectController"
            public="true"
        >
            <argument type="service" id="sulu_media.media_manager" />

            <tag name="sulu.context" context="admin"/>
        </service>

        <service
            id="sulu_media.collection_controller"
            class="Sulu\Bundle\MediaBundle\Controller\CollectionController"
            public="true"
        >
            <argument type="service" id="fos_rest.view_handler" />
            <argument type="service" id="security.token_storage" on-invalid="null" />
            <argument type="service" id="sulu_core.list_rest_helper" />
            <argument type="service" id="sulu_security.security_checker" />
            <argument type="service" id="translator" />
            <argument type="service" id="sulu_media.system_collections.manager" />
            <argument type="service" id="sulu_media.collection_manager" />
            <argument>%sulu_media.collection.type.default%</argument>
            <argument>%sulu_security.permissions%</argument>
            <argument>%sulu.model.collection.class%</argument>

            <tag name="sulu.context" context="admin"/>
        </service>

        <service id="sulu_media.media_stream_controller"
                 class="Sulu\Bundle\MediaBundle\Controller\MediaStreamController"
                 public="true">
            <argument type="service" id="sulu_media.disposition_type.resolver"/>
            <argument type="service" id="sulu.repository.media"/>
            <argument type="service" id="sulu.content.path_cleaner"/>
            <argument type="service" id="sulu_media.format_manager"/>
            <argument type="service" id="sulu_media.format_cache"/>
            <argument type="service" id="sulu_media.media_manager"/>
            <argument type="service" id="sulu_media.storage"/>
            <argument type="service" id="sulu_security.security_checker" on-invalid="null"/>
        </service>

        <service
            id="sulu_media.format_controller"
            class="Sulu\Bundle\MediaBundle\Controller\FormatController"
            public="true"
        >
            <argument type="service" id="fos_rest.view_handler" />
            <argument type="service" id="sulu_media.format_manager" />

            <tag name="sulu.context" context="admin"/>
        </service>

        <service id="sulu_media.admin" class="%sulu_media.admin.class%">
            <tag name="sulu.admin"/>
            <tag name="sulu.context" context="admin"/>
            <argument type="service" id="Sulu\Bundle\AdminBundle\Admin\View\ViewBuilderFactoryInterface"/>
            <argument type="service" id="sulu_security.security_checker"/>
            <argument type="service" id="sulu.core.localization_manager"/>
            <argument type="service" id="router"/>
            <argument type="service" id="sulu_core.webspace.webspace_manager" />
            <argument type="service" id="sulu_activity.activity_list_view_builder_factory" />
        </service>
        <service id="sulu_media.collection_repository" class="%sulu_media.collection_repository.class%" public="true">
            <factory service="doctrine.orm.entity_manager" method="getRepository"/>
            <argument>%sulu_media.collection_entity%</argument>
            <call method="setAccessControlQueryEnhancer">
                <argument type="service" id="sulu_security.access_control_query_enhancer" />
            </call>

            <tag name="sulu_security.access_control_descendant_provider"/>
        </service>
        <service id="sulu_media.file_version_meta_repository"
                 class="Sulu\Bundle\MediaBundle\Entity\FileVersionMetaRepository">
            <factory service="doctrine.orm.entity_manager" method="getRepository"/>
            <argument>%sulu_media.entity.file_version_meta%</argument>
        </service>
        <service id="sulu_media.file_validator" class="%sulu_media.file_validator.class%" />

        <service id="sulu_media.format_cache_clearer" class="%sulu_media.format_cache_clearer.class%" />
        <service id="sulu_media.format_cache" class="%sulu_media.format_cache.class%" public="true">
            <argument type="service" id="filesystem"/>
            <argument>%sulu_media.format_cache.path%</argument>
            <argument>%sulu_media.format_cache.media_proxy_path%</argument>
            <argument>%sulu_media.format_cache.segments%</argument>
            <tag name="sulu_media.format_cache" alias="local" />
        </service>

        <!-- Imagine Adapters -->
        <service id="sulu_media.adapter" alias="sulu_media.adapter.gd"/>
        <service id="sulu_media.adapter.gd" class="Imagine\Gd\Imagine" public="false"/>
        <service id="sulu_media.adapter.imagick" class="Imagine\Imagick\Imagine" public="false"/>
        <service id="sulu_media.adapter.gmagick" class="Imagine\Gmagick\Imagine" public="false"/>

        <service id="sulu_media.image.converter" class="%sulu_media.image.converter.class%">
            <argument type="service" id="sulu_media.adapter"/>
            <argument type="service" id="sulu_media.storage" />
            <argument type="service" id="sulu_media.image.media_extractor"/>
            <argument type="service" id="sulu_media.image.transformation_pool" />
            <argument type="service" id="sulu_media.image.focus" />
            <argument type="service" id="sulu_media.image.scaler" />
            <argument type="service" id="sulu_media.image.cropper" />
            <argument>%sulu_media.image.formats%</argument>
            <argument>%sulu_media.format_manager.mime_types%</argument>
            <argument type="service" id="sulu_media.adapter.svg" on-invalid="null"/>
        </service>

        <service id="sulu_media.image.media_extractor" class="Sulu\Bundle\MediaBundle\Media\ImageConverter\MediaImageExtractor">
            <argument type="service" id="sulu_media.adapter"/>
            <argument type="service" id="sulu_media.video_thumbnail_generator"/>
            <argument>%sulu_media.ghost_script.path%</argument>
        </service>

        <service id="sulu_media.image.focus" class="Sulu\Bundle\MediaBundle\Media\ImageConverter\Focus\Focus"/>
        <service id="sulu_media.image.scaler" class="%sulu_media.image.scaler.class%" />
        <service id="sulu_media.image.cropper" class="%sulu_media.image.cropper.class%" />

        <service id="sulu_media.image.transformation_pool" class="%sulu_media.image.transformation_pool.class%" />

        <service id="sulu_media.image.transformation.crop" class="%sulu_media.image.transformation.crop.class%">
            <tag name="sulu_media.image.transformation" alias="crop" />
        </service>

        <service id="sulu_media.image.transformation.paste" class="Sulu\Bundle\MediaBundle\Media\ImageConverter\Transformation\PasteTransformation">
            <argument type="service" id="sulu_media.adapter"/>
            <argument type="service" id="file_locator"/>

            <tag name="sulu_media.image.transformation" alias="paste" />
        </service>

        <service id="sulu_media.image.transformation.blur" class="Sulu\Bundle\MediaBundle\Media\ImageConverter\Transformation\BlurTransformation">
            <tag name="sulu_media.image.transformation" alias="blur" />
        </service>

        <service id="sulu_media.image.transformation.gamma" class="Sulu\Bundle\MediaBundle\Media\ImageConverter\Transformation\GammaTransformation">
            <tag name="sulu_media.image.transformation" alias="gamma" />
        </service>

        <service id="sulu_media.image.transformation.grayscale" class="Sulu\Bundle\MediaBundle\Media\ImageConverter\Transformation\GrayscaleTransformation">
            <tag name="sulu_media.image.transformation" alias="grayscale" />
        </service>

        <service id="sulu_media.image.transformation.negative" class="Sulu\Bundle\MediaBundle\Media\ImageConverter\Transformation\NegativeTransformation">
            <tag name="sulu_media.image.transformation" alias="negative" />
        </service>

        <service id="sulu_media.image.transformation.sharpen" class="Sulu\Bundle\MediaBundle\Media\ImageConverter\Transformation\SharpenTransformation">
            <tag name="sulu_media.image.transformation" alias="sharpen" />
        </service>

        <service id="sulu_media.media_manager" class="%sulu_media.media_manager.class%" public="true">
            <argument type="service" id="sulu.repository.media" />
            <argument type="service" id="sulu_media.collection_repository" />
            <argument type="service" id="sulu.repository.user" />
            <argument type="service" id="sulu.repository.category"/>
            <argument type="service" id="doctrine.orm.entity_manager" />
            <argument type="service" id="sulu_media.storage" />
            <argument type="service" id="sulu_media.file_validator" />
            <argument type="service" id="sulu_media.format_manager" />
            <argument type="service" id="sulu_tag.tag_manager" />
            <argument type="service" id="sulu_media.type_manager" />
            <argument type="service" id="sulu.content.path_cleaner" />
            <argument type="service" id="sulu_activity.domain_event_collector"/>
            <argument type="service" id="security.token_storage" on-invalid="null" />
            <argument type="service" id="sulu_security.security_checker" on-invalid="null" />
            <argument type="tagged_iterator" tag="sulu_media.media_properties_provider"/>
            <argument type="string">%sulu_media.media_manager.media_download_path%</argument>
            <argument type="service" id="sulu.repository.target_group" on-invalid="null"/>
            <argument type="string">%sulu_media.media_manager.media_download_path_admin%</argument>
            <argument type="service" id="sulu_trash.trash_manager" on-invalid="null"/>
        </service>

        <service id="Sulu\Bundle\MediaBundle\Media\Manager\MediaManagerInterface" alias="sulu_media.media_manager"/>

        <service id="sulu_media.image_properties_provider" class="Sulu\Bundle\MediaBundle\Media\PropertiesProvider\ImagePropertiesProvider">
            <argument type="service" id="sulu_media.adapter"/>
            <argument type="service" id="sulu_media.adapter.svg" on-invalid="null"/>

            <tag name="sulu_media.media_properties_provider"/>
        </service>

        <service id="sulu_media.type_manager" class="%sulu_media.type_manager.class%">
            <argument type="service" id="doctrine.orm.entity_manager" />
            <argument>%sulu_media.media.types%</argument>
            <argument>%sulu_media.media.blocked_file_types%</argument>
        </service>

        <service id="Sulu\Bundle\MediaBundle\Media\TypeManager\TypeManagerInterface" alias="sulu_media.type_manager"/>

        <service id="sulu_media.format_options_repository" class="Doctrine\ORM\EntityRepository">
            <factory service="doctrine.orm.entity_manager" method="getRepository"/>
            <argument>%sulu_media.format_options_entity%</argument>
        </service>

        <service id="sulu_media.format_options_manager" class="%sulu_media.format_options_manager.class%" public="true">
            <argument type="service" id="doctrine.orm.entity_manager" />
            <argument type="service" id="sulu_media.format_options_repository" />
            <argument type="service" id="sulu_media.media_manager" />
            <argument type="service" id="sulu_media.format_manager" />
            <argument type="service" id="sulu_activity.domain_event_collector" />
            <argument>%sulu_media.image.formats%</argument>
        </service>

        <service id="sulu_media.format_manager" class="%sulu_media.format_manager.class%" public="true">
            <argument type="service" id="sulu.repository.media" />
            <argument type="service" id="sulu_media.format_cache" />
            <argument type="service" id="sulu_media.image.converter" />
            <argument type="string">%sulu_media.format_cache.save_image%</argument>
            <argument type="string">%sulu_media.format_manager.response_headers%</argument>
            <argument>%sulu_media.image.formats%</argument>
            <argument type="service" id="logger" on-invalid="null"/>
        </service>

        <service id="sulu_media.type.collection_selection" class="Sulu\Bundle\MediaBundle\Content\Types\CollectionSelection">
            <argument type="service" id="sulu_media.collection_manager"/>
            <argument type="service" id="sulu_media.reference_store.collection"/>

            <tag name="sulu.content.type" alias="collection_selection"/>
            <tag name="sulu.content.export" format="1.2.xliff" translate="false" />
        </service>

        <service id="sulu_media.type.single_collection_selection" class="Sulu\Bundle\MediaBundle\Content\Types\SingleCollectionSelection">
            <argument type="service" id="sulu_media.collection_manager"/>
            <argument type="service" id="sulu_media.reference_store.collection"/>

            <tag name="sulu.content.type" alias="single_collection_selection"/>
            <tag name="sulu.content.export" format="1.2.xliff" translate="false" />
        </service>

        <service id="sulu_media.type.media_selection" class="%sulu_media.media_selection.class%">
            <argument type="service" id="sulu_media.media_manager"/>
            <argument type="service" id="sulu_media.reference_store.media"/>
            <argument type="service" id="sulu_core.webspace.request_analyzer"/>
            <argument>%sulu_security.permissions%</argument>
            <argument type="service" id="sulu_admin.property_metadata_min_max_value_resolver" on-invalid="null"/>

            <tag name="sulu.content.type" alias="media_selection"/>
            <tag name="sulu.content.export" format="1.2.xliff" translate="false" />
            <tag name="sulu_admin.property_metadata_mapper" type="media_selection"/>
        </service>

        <service id="sulu_media.type.single_media_selection" class="Sulu\Bundle\MediaBundle\Content\Types\SingleMediaSelection">
            <argument type="service" id="sulu_media.media_manager"/>
            <argument type="service" id="sulu_media.reference_store.media"/>
            <argument type="service" id="sulu_core.webspace.request_analyzer"/>
            <argument type="service" id="sulu_security.security_checker" on-invalid="null"/>

            <tag name="sulu.content.type" alias="single_media_selection"/>
            <tag name="sulu.content.export" format="1.2.xliff" translate="false" />
            <tag name="sulu_admin.property_metadata_mapper" type="single_media_selection"/>
        </service>

        <service id="sulu_media.type.image_map" class="Sulu\Bundle\MediaBundle\Content\Types\ImageMapContentType">
            <argument type="service" id="sulu.content.type_manager"/>

            <tag name="sulu.content.type" alias="image_map"/>
            <tag name="sulu.content.export" format="1.2.xliff" translate="false" />
        </service>

        <service id="sulu_media.collection_manager" class="%sulu_media.collection_manager.class%" public="true">
            <argument type="service" id="sulu_media.collection_repository" />
            <argument type="service" id="sulu.repository.media" />
            <argument type="service" id="sulu_media.format_manager" />
            <argument type="service" id="sulu.repository.user" />
            <argument type="service" id="doctrine.orm.entity_manager" />
            <argument type="service" id="sulu_activity.domain_event_collector"/>
            <argument type="service" id="security.token_storage" on-invalid="null"/>
            <argument type="service" id="sulu_trash.trash_manager" on-invalid="null"/>
            <argument type="string">%sulu_media.collection.previews.format%</argument>
            <argument>%sulu_security.permissions%</argument>
        </service>

        <service id="sulu_media.twig_extension.disposition_type" class="%sulu_media.twig_extension.disposition_type.class%">
            <tag name="twig.extension"/>
        </service>

        <service id="sulu_media.twig_extension.media" class="%sulu_media.twig_extension.media.class%">
            <argument type="service" id="sulu_media.media_manager"/>

            <tag name="twig.extension"/>
        </service>

        <service id="sulu_media.video_thumbnail_generator" class="%sulu_media.video_thumbnail_generator.class%">
            <argument type="service" id="sulu_media.ffmpeg" on-invalid="null"/>
        </service>

        <service id="sulu_media.permission_listener" class="Sulu\Bundle\MediaBundle\Search\EventListener\PermissionListener">
            <argument type="service" id="sulu_media.file_version_meta_repository"/>
            <argument type="service" id="massive_search.search_manager"/>
            <tag name="kernel.event_subscriber"/>
        </service>

        <service id="sulu_media.security_context" class="Sulu\Component\Security\Authorization\SecurityCondition">
            <argument>sulu.media.collections</argument>
        </service>

        <service id="sulu_media.smart_content.data_provider.media.repository" class="Sulu\Bundle\MediaBundle\Entity\MediaDataProviderRepository">
            <argument type="service" id="doctrine.orm.entity_manager"/>
            <argument type="service" id="sulu_media.media_manager"/>
            <argument type="string">%sulu.model.media.class%</argument>
            <argument type="string">%sulu_media.collection_entity%</argument>
            <argument type="service" id="sulu_security.access_control_query_enhancer"/>
        </service>

        <service id="sulu_media.smart_content.data_provider.media" class="Sulu\Component\Media\SmartContent\MediaDataProvider">
            <argument type="service" id="sulu_media.smart_content.data_provider.media.repository"/>
            <argument type="service" id="sulu_media.collection_manager"/>
            <argument type="service" id="sulu_core.array_serializer"/>
            <argument type="service" id="request_stack"/>
            <argument type="service" id="sulu_media.reference_store.media"/>
            <argument type="service" id="security.helper" on-invalid="ignore"/>
            <argument type="service" id="sulu_core.webspace.request_analyzer"/>
            <argument>%sulu_security.permissions%</argument>
            <argument type="expression">container.hasParameter('sulu_audience_targeting.enabled')</argument>
            <argument type="service" id="doctrine.orm.default_entity_manager"/>
            <argument type="service" id="translator"/>

            <tag name="sulu.smart_content.data_provider" alias="media"/>
        </service>

        <service id="sulu_media.system_collections.cache" class="Sulu\Component\Cache\DataCache">
            <argument>%sulu.cache_dir%/system_collection.cache</argument>
        </service>

        <service id="sulu_media.system_collections.manager" class="Sulu\Component\Media\SystemCollections\SystemCollectionManager" public="true">
            <argument>%sulu_media.system_collections%</argument>
            <argument type="service" id="sulu_media.collection_manager"/>
            <argument type="service" id="doctrine.orm.entity_manager" />
            <argument type="service" id="security.token_storage" on-invalid="null"/>
            <argument type="service" id="sulu_media.system_collections.cache"/>
            <argument>%kernel.default_locale%</argument>
        </service>
        <service id="Sulu\Component\Media\SystemCollections\SystemCollectionManagerInterface" alias="sulu_media.system_collections.manager"/>

        <service id="sulu_media.system_collections.builder" class="Sulu\Component\Media\SystemCollections\SystemCollectionBuilder">
            <argument type="service" id="sulu_media.system_collections.manager"/>

            <tag name="massive_build.builder" />
        </service>

        <service id="sulu_media.disposition_type.resolver" class="Sulu\Bundle\MediaBundle\Media\DispositionType\DispositionTypeResolver" public="true">
            <argument>%sulu_media.disposition_type.default%</argument>
            <argument>%sulu_media.disposition_type.mime_types_inline%</argument>
            <argument>%sulu_media.disposition_type.mime_types_attachment%</argument>
        </service>

        <service id="sulu_media.reference_store.media" class="Sulu\Bundle\WebsiteBundle\ReferenceStore\ReferenceStore">
            <tag name="sulu_website.reference_store" alias="media"/>
            <tag name="kernel.reset" method="reset"/>
        </service>

        <service id="sulu_media.reference_store.collection" class="Sulu\Bundle\WebsiteBundle\ReferenceStore\ReferenceStore">
            <tag name="sulu_website.reference_store" alias="collection"/>
        </service>

        <service id="sulu_media.doctrine.invalidation_listener"
                 class="Sulu\Bundle\MediaBundle\EventListener\CacheInvalidationListener">
            <argument type="service" id="sulu_http_cache.cache_manager" on-invalid="null" />

            <tag name="doctrine.event_listener" event="postPersist"/>
            <tag name="doctrine.event_listener" event="postUpdate"/>
            <tag name="doctrine.event_listener" event="preRemove"/>
        </service>

        <service id="sulu_media.media_link_provider" class="Sulu\Bundle\MediaBundle\Markup\Link\MediaLinkProvider">
            <argument type="service" id="sulu.repository.media" />
            <argument type="service" id="sulu_media.media_manager"/>
            <tag name="sulu.link.provider" alias="media"/>
        </service>

        <service id="sulu_media.command.format_cache.cleanup"
                 class="Sulu\Bundle\MediaBundle\Command\FormatCacheCleanupCommand">
            <argument type="service" id="sulu.repository.media"/>
            <argument type="service" id="filesystem"/>
            <argument>%sulu_media.format_cache.path%</argument>

            <tag name="console.command"/>
        </service>

        <service id="sulu_media.command.format_cache.regenerate"
                 class="Sulu\Bundle\MediaBundle\Command\FormatCacheRegenerateCommand">
            <argument type="service" id="filesystem"/>
            <argument type="service" id="sulu_media.format_manager" />
            <argument>%sulu_media.format_cache.path%</argument>

            <tag name="console.command"/>
        </service>

        <service id="sulu_media.fixtures.collection_types" class="Sulu\Bundle\MediaBundle\DataFixtures\ORM\LoadCollectionTypes">
            <tag name="doctrine.fixture.orm"/>
        </service>

        <service id="sulu_media.fixtures.media_types" class="Sulu\Bundle\MediaBundle\DataFixtures\ORM\LoadMediaTypes">
            <tag name="doctrine.fixture.orm"/>
        </service>

        <service id="sulu_media.field_metadata_validator.image_map"
                 class="Sulu\Bundle\MediaBundle\Metadata\ImageMapFieldMetadataValidator">
            <tag name="sulu_admin.field_metadata_validator"/>
        </service>

        <service id="sulu_security.serializer.media_permissions" class="Sulu\Bundle\MediaBundle\Serializer\Subscriber\MediaPermissionsSubscriber">
            <argument type="service" id="sulu_security.access_control_manager"/>
            <argument type="service" id="security.token_storage"/>
            <tag name="jms_serializer.event_subscriber"/>
            <tag name="sulu.context" context="admin"/>
        </service>

        <service
            id="sulu_media.file_inspector.sanitizer_factory"
            class="Sulu\Bundle\MediaBundle\FileInspector\SvgSanitizerFactory"
        />

        <service
            id="sulu_media.file_inspector.html_sanitizer"
            class="Symfony\Component\HtmlSanitizer\HtmlSanitizerInterface"
        >
            <factory service="sulu_media.file_inspector.sanitizer_factory" method="create"/>
        </service>

        <service
            id="sulu_media.file_inspector.html_sanitizer_safe"
            class="Symfony\Component\HtmlSanitizer\HtmlSanitizerInterface"
        >
            <factory service="sulu_media.file_inspector.sanitizer_factory" method="createSafe"/>
        </service>

        <service
            id="sulu_media.file_inspector.svg_inspector"
            class="Sulu\Bundle\MediaBundle\FileInspector\SvgFileInspector"
        >
            <argument type="service" id="sulu_media.file_inspector.html_sanitizer"/>
            <argument type="service" id="sulu_media.file_inspector.html_sanitizer_safe"/>

            <tag name="sulu_media.file_inspector"/>
        </service>
        <service id="Sulu\Bundle\MediaBundle\FileInspector\SvgSafetyInspectorInterface" alias="sulu_media.file_inspector.svg_inspector"/>

        <service
            id="sulu_media.file_inspector.subscriber"
            class="Sulu\Bundle\MediaBundle\FileInspector\UploadFileSubscriber"
        >
            <argument type="tagged" tag="sulu_media.file_inspector"/>

            <tag name="kernel.event_subscriber"/>
        </service>
    </services>
</container>
